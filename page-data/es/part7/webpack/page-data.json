{"componentChunkName":"component---src-templates-content-template-js","path":"/es/part7/webpack","result":{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>Desarrollar con React fue conocido por requerir herramientas que eran muy difíciles de configurar. En estos días, comenzar con el desarrollo de React es casi indoloro gracias a <a href=\"https://github.com/facebookincubator/create-react-app\">create-react-app</a>. Probablemente nunca haya existido un mejor flujo de trabajo de desarrollo para el desarrollo de JavaScript del lado del navegador.</p>\n<p>No podemos confiar en la magia negra de create-react-app para siempre y es hora de que echemos un vistazo debajo del capó. Uno de los jugadores clave para hacer que las aplicaciones React sean funcionales es una herramienta llamada <a href=\"https://webpack.js.org/\">webpack</a>.</p>\n<h3>Empaquetamiento</h3>\n<p>Hemos implementado nuestras aplicaciones dividiendo nuestro código en módulos separados que se han <i>importado</i> a lugares que los requieren. Aunque los módulos ES6 se definen en el estándar ECMAScript, ningún navegador sabe realmente cómo manejar el código dividido en módulos.</p>\n<p>Por esta razón, el código que se divide en módulos debe estar <i>empaquetado</i> para los navegadores, lo que significa que todos los archivos de código fuente se transforman en un solo archivo que contiene todo el código de la aplicación. Cuando implementamos nuestro frontend de React en producción en la <a href=\"/es/part3/deploying_app_to_internet\">parte 3</a>, realizamos el empaquetado de nuestra aplicación con el comando <em>npm run build</em>. En la cara oculta, el script npm empaqueta el código fuente usando el webpack que produce la siguiente colección de archivos en el directorio de <i>compilación</i>:</p>\n<pre>\n├── asset-manifest.json\n├── favicon.ico\n├── index.html\n├── manifest.json\n├── precache-manifest.8082e70dbf004a0fe961fc1f317b2683.js\n├── service-worker.js\n└── static\n    ├── css\n    │   ├── main.f9a47af2.chunk.css\n    │   └── main.f9a47af2.chunk.css.map\n    └── js\n        ├── 1.578f4ea1.chunk.js\n        ├── 1.578f4ea1.chunk.js.map\n        ├── main.8209a8f2.chunk.js\n        ├── main.8209a8f2.chunk.js.map\n        ├── runtime~main.229c360f.js\n        └── runtime~main.229c360f.js.map\n</pre>\n<p>El archivo <i>index.html</i> ubicado en la raíz del directorio de compilación es el \"archivo principal\" de la aplicación, que carga el archivo JavaScript incluido con la etiqueta <i>script</i> (de hecho, hay dos archivos JavaScript incluidos):</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token name\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>React App<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/static/css/main.f9a47af2.chunk.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/static/js/1.578f4ea1.chunk.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/static/js/main.8209a8f2.chunk.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Como podemos ver en la aplicación de ejemplo que se creó con create-react-app, el script de compilación también agrupa los archivos CSS de la aplicación en un solo archivo <i>/static/css/main.f9a47af2.chunk.css</i>.</p>\n<p>En la práctica, la agrupación se realiza de modo que definamos un punto de entrada para la aplicación, que normalmente es el archivo <i>index.js</i>. Cuando webpack empaqueta el código, incluye todo el código que importa el punto de entrada y el código que importa, y así sucesivamente.</p>\n<p>Dado que parte de los archivos importados son paquetes como React, Redux y Axios, el archivo JavaScript incluido también contendrá el contenido de cada una de estas librerías.</p>\n<blockquote>\n<p>La antigua forma de dividir el código de la aplicación en varios archivos se basaba en el hecho de que el archivo <i>index.html</i> cargaba todos los archivos JavaScript separados de la aplicación con la ayuda de etiquetas de script. Esto resultó en una disminución del rendimiento, ya que la carga de cada archivo por separado genera algunos gastos generales. Por esta razón, en estos días, el método preferido es agrupar el código en un solo archivo.</p>\n</blockquote>\n<p>A continuación, crearemos una configuración de webpack adecuada para una aplicación React a mano desde cero.</p>\n<p>Creemos un nuevo directorio para el proyecto con los siguientes subdirectorios (<i>build</i> y <i>src</i>) y archivos:</p>\n<pre>\n├── build\n├── package.json\n├── src\n│   └── index.js\n└── webpack.config.js\n</pre>\n<p>El contenido del archivo <i>package.json</i> puede ser, por ejemplo, el siguiente:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-part7\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"practising webpack\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Instalemos webpack con el comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev webpack webpack<span class=\"token operator\">-</span>cli</code></pre></div>\n<p>Definimos la funcionalidad de webpack en el archivo <i>webpack.config.js</i>, que inicializamos con el siguiente contenido:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>Luego definiremos un nuevo script npm llamado <i>build</i> que ejecutará el empaquetado con webpack:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ...</span>\n<span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=development\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// ...</span></code></pre></div>\n<p>Agreguemos más código al archivo <i>src/index.js</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hello</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">name</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cuando ejecutamos el comando <em>npm run build</em> , el código de nuestra aplicación será empaquetado por webpack. La operación producirá un nuevo archivo <i>main.js</i> que se agregará al directorio de <i>compilación</i>:</p>\n<picture><img src=\"/static/18006775439c0e9ed8be7c167f4ed2a1/5a190/19ea.png\" srcset=\"/static/18006775439c0e9ed8be7c167f4ed2a1/772e8/19ea.png 200w,\n/static/18006775439c0e9ed8be7c167f4ed2a1/e17e5/19ea.png 400w,\n/static/18006775439c0e9ed8be7c167f4ed2a1/5a190/19ea.png 800w,\n/static/18006775439c0e9ed8be7c167f4ed2a1/f32b7/19ea.png 1136w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>El archivo contiene muchas cosas que parecen bastante interesantes. También podemos ver el código que escribimos anteriormente al final del archivo:</p>\n<picture><img src=\"/static/c70fda1d18d6108a300aaa63caf8547e/5a190/19eb.png\" srcset=\"/static/c70fda1d18d6108a300aaa63caf8547e/772e8/19eb.png 200w,\n/static/c70fda1d18d6108a300aaa63caf8547e/e17e5/19eb.png 400w,\n/static/c70fda1d18d6108a300aaa63caf8547e/5a190/19eb.png 800w,\n/static/c70fda1d18d6108a300aaa63caf8547e/f32b7/19eb.png 1136w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Agreguemos un archivo <i>App.js</i> en el directorio <i>src</i> con el siguiente contenido:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Vamos a importar y usar el módulo <i>App</i> en el archivo <i>index.js</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hello</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">name</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cuando empaquetamos la aplicación nuevamente con el comando <em>npm run build</em>, notamos que webpack ha reconocido ambos archivos:</p>\n<picture><img src=\"/static/62edc7a7a351d02cde9313063d461b70/5a190/20ea.png\" srcset=\"/static/62edc7a7a351d02cde9313063d461b70/772e8/20ea.png 200w,\n/static/62edc7a7a351d02cde9313063d461b70/e17e5/20ea.png 400w,\n/static/62edc7a7a351d02cde9313063d461b70/5a190/20ea.png 800w,\n/static/62edc7a7a351d02cde9313063d461b70/f32b7/20ea.png 1136w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>El código de nuestra aplicación se puede encontrar al final del archivo del paquete en un formato bastante oscuro:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/***/</span> <span class=\"token string\">\"./src/App.js\"</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">/*!********************!*\\\n  !*** ./src/App.js ***!\n  \\********************/</span>\n<span class=\"token comment\">/*! exports provided: default */</span>\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">module<span class=\"token punctuation\">,</span> __webpack_exports__<span class=\"token punctuation\">,</span> __webpack_require__</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__webpack_require__.r(__webpack_exports__);\\nconst App = () => {\\n  return null\\n}\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (App);\\n\\n//# sourceURL=webpack:///./src/App.js?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">/***/</span> <span class=\"token string\">\"./src/index.js\"</span><span class=\"token operator\">:</span>\n<span class=\"token comment\">/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/</span>\n<span class=\"token comment\">/*! no exports provided */</span>\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">module<span class=\"token punctuation\">,</span> __webpack_exports__<span class=\"token punctuation\">,</span> __webpack_require__</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _App__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App */ \\\"./src/App.js\\\");\\n\\n\\nconst hello = name => {\\n  console.log(`hello ${name}`)\\n};\\n\\nObject(_App__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])()\\n\\n//# sourceURL=webpack:///./src/index.js?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***/</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Archivo de configuración</h3>\n<p>Echemos un vistazo más de cerca al contenido de nuestro archivo <i>webpack.config.js</i> actual:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>El archivo de configuración se ha escrito en JavaScript y el objeto de configuración se exporta utilizando la sintaxis del módulo de Node.</p>\n<p>Nuestra definición de configuración mínima casi se explica sola. La propiedad <a href=\"https://webpack.js.org/concepts/#entry\">entry</a> del objeto de configuración especifica el archivo que servirá como punto de entrada para empaquetar la aplicación.</p>\n<p>La propiedad <a href=\"https://webpack.js.org/concepts/#output\">output</a> define la ubicación donde se almacenará el código empaquetado. El directorio de destino debe definirse como una <i>ruta absoluta</i> que sea fácil de crear con el método <a href=\"https://nodejs.org/docs/latest-v8.x/api/path.html#path_path_resolve_paths\">path.resolve</a>. También usamos <a href=\"https://nodejs.org/docs/latest/api/globals.html#globals_dirname\">__dirname</a>, que es una variable global en Node que almacena la ruta al directorio actual.</p>\n<h3>Empaquetando React</h3>\n<p>A continuación, transformemos nuestra aplicación en una aplicación React mínima. Instalemos las librerías necesarias:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> react react-dom</code></pre></div>\n<p>Y convirtamos nuestra aplicación en una aplicación React agregando las definiciones familiares en el archivo <i>index.js</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>También realizaremos los siguientes cambios en el archivo <i>App.js</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>hello webpack<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Todavía necesitamos el archivo <i>build/index.html</i> que servirá como la \"página principal\" de nuestra aplicación que cargará nuestro código JavaScript incluido con una etiqueta <i>script</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>React App<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Cuando empaquetamos nuestra aplicación, nos encontramos con el siguiente problema:</p>\n<picture><img src=\"/static/38ca80de4d0bec110883af620a844e20/5a190/21.png\" srcset=\"/static/38ca80de4d0bec110883af620a844e20/772e8/21.png 200w,\n/static/38ca80de4d0bec110883af620a844e20/e17e5/21.png 400w,\n/static/38ca80de4d0bec110883af620a844e20/5a190/21.png 800w,\n/static/38ca80de4d0bec110883af620a844e20/c1b63/21.png 1200w,\n/static/38ca80de4d0bec110883af620a844e20/081d5/21.png 1264w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h3>Cargadores</h3>\n<p>El mensaje de error del paquete web indica que es posible que necesitemos un <i>cargador</i> adecuado para empaquetar el archivo <i>App.js</i> correctamente. De forma predeterminada, webpack solo sabe cómo lidiar con JavaScript simple. Aunque es posible que no nos demos cuenta, en realidad estamos usando <a href=\"https://facebook.github.io/jsx/\">JSX</a> para renderizar nuestras vistas en React. Para ilustrar esto, el siguiente código no es JavaScript normal:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>hello webpack<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La sintaxis utilizada anteriormente proviene de JSX y nos proporciona una forma alternativa de definir un elemento React para una etiqueta <i>div</i>.</p>\n<p>Podemos usar <a href=\"https://webpack.js.org/concepts/loaders/\">caargadores</a> para informar a webpack de los archivos que deben procesarse antes de que se empaqueten.</p>\n<p>Configuremos un cargador para nuestra aplicación que transforme el código JSX en JavaScript normal:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">        loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">        options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">          presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Los cargadores se definen en la propiedad <i>module</i> en el array de <i>rules</i>.</p>\n<p>La definición de un solo cargador consta de tres partes:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n  loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La propiedad <i>test</i> especifica que el cargador es para archivos que tienen nombres que terminan en <i>.js</i>. La propiedad <i>loader</i> especifica que el procesamiento de esos archivos se realizará con <a href=\"https://github.com/babel/babel-loader\">babel-loader</a>. La propiedad <i>options</i> se utiliza para especificar parámetros para el cargador, que configuran su funcionalidad.</p>\n<p>Instalemos el cargador y sus paquetes requeridos como una <i>dependencia de desarrollo</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install @babel<span class=\"token operator\">/</span>core babel<span class=\"token operator\">-</span>loader @babel<span class=\"token operator\">/</span>preset<span class=\"token operator\">-</span>react <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev</code></pre></div>\n<p>La empaquetación de la aplicación ahora se realizará correctamente.</p>\n<p>Si realizamos algunos cambios en el componente <i>App</i> y echamos un vistazo al código incluido, notamos que la versión empaquetada del componente se ve así:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  react__WEBPACK_IMPORTED_MODULE_0___default<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'hello webpack'</span>\n  <span class=\"token punctuation\">)</span></code></pre></div>\n<p>Como podemos ver en el ejemplo anterior, los elementos de React que se escribieron en JSX ahora se crean con JavaScript normal utilizando la función <a href=\"https://reactjs.org/docs/react-without-jsx.html\">createElement</a> de React .</p>\n<p>Puede probar la aplicación incluida abriendo el archivo <i>build/index.html</i> abriendo el archivo en su navegador:</p>\n<picture><img src=\"/static/8ea4fcb4865031a1f62babc133bdb1bb/5a190/22.png\" srcset=\"/static/8ea4fcb4865031a1f62babc133bdb1bb/772e8/22.png 200w,\n/static/8ea4fcb4865031a1f62babc133bdb1bb/e17e5/22.png 400w,\n/static/8ea4fcb4865031a1f62babc133bdb1bb/5a190/22.png 800w,\n/static/8ea4fcb4865031a1f62babc133bdb1bb/c1b63/22.png 1200w,\n/static/8ea4fcb4865031a1f62babc133bdb1bb/d4e7f/22.png 1416w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Vale la pena señalar que si el código fuente de la aplicación incluida usa <i>async/await</i>, el navegador no renderizará nada en algunos navegadores. <a href=\"https://stackoverflow.com/questions/33527653/babel-6-regeneratorruntime-is-not-defined\">Buscar en Google el mensaje de error en la consola</a> arrojará algo de luz sobre el problema. Tenemos que instalar una dependencia más que falta, que es <a href=\"https://babeljs.io/docs/en/babel-polyfill\">@babel/polyfill</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @babel/polyfill</code></pre></div>\n<p>Realicemos los siguientes cambios en la propiedad <i>entry</i> del objeto de configuración de webpack en el archivo i>webpack.config.js</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/polyfill'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Nuestra configuración contiene casi todo lo que necesitamos para el desarrollo de React.</p>\n<h3>Transpiladores</h3>\n<p>El proceso de transformar código de una forma de JavaScript a otra se denomina <a href=\"https://en.wiktionary.org/wiki/transpile\">transpilación</a>. La definición general del término es compilar código fuente transformándolo de un ilenguaje a otro.</p>\n<p>Al utilizar la configuración de la sección anterior, estamos <i>transpilando</i> el código que contiene JSX en JavaScript normal con la ayuda de <a href=\"https://babeljs.io/\">babel</a>, que actualmente es la herramienta más popular para el trabajo.</p>\n<p>Como se mencionó en la parte 1, la mayoría de los navegadores no son compatibles con las funciones más recientes que se introdujeron en ES6 y ES7, y por esta razón, el código generalmente se transpila a una versión de JavaScript que implementa el estándar ES5.</p>\n<p>El proceso de transpilación que ejecuta Babel se define con <i>plugins</i>. En la práctica, la mayoría de los desarrolladores utilizan <a href=\"https://babeljs.io/docs/plugins/\">presets</a> que son grupos de plugins preconfigurados.</p>\n<p>Actualmente estamos usando el preset <a href=\"https://babeljs.io/docs/plugins/preset-react/\">@babel/preset-react</a> para transpilar el código fuente de nuestra aplicación:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n  loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Agreguemos el plugin <a href=\"https://babeljs.io/docs/plugins/preset-env/\">@babel/preset-env</a> que contiene todo lo necesario para tomar código utilizando todas las funciones más recientes y transpilarlo a un código que sea compatible con el estándar ES5:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n  loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Instalemos el preset con el comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install @babel<span class=\"token operator\">/</span>preset<span class=\"token operator\">-</span>env <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev</code></pre></div>\n<p>Cuando transpilamos el código, se transforma en JavaScript de la vieja escuela. La definición del componente <i>App</i> transformado se ve así:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> _react2<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello webpack'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Como podemos ver, las variables se declaran con la palabra clave <em>var</em>, ya que ES5 JavaScript no comprende la palabra clave <em>const</em>. Las funciones de flecha tampoco se utilizan, por lo que la definición de función utilizó la palabra clave <em>function</em>.</p>\n<h3>CSS</h3>\n<p>Agreguemos algo de CSS a nuestra aplicación. Creemos un nuevo archivo <i>src/index.css</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #dee8e4<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Luego usemos el estilo en el componente <i>App</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n      hello webpack\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>E importamos el estilo en el archivo <i>index.js</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./index.css'</span></code></pre></div>\n<p>Esto hará que el proceso de transpilación se interrumpa:</p>\n<picture><img src=\"/static/1649a2a54abebd38a025fb11542ad0cf/5a190/23.png\" srcset=\"/static/1649a2a54abebd38a025fb11542ad0cf/772e8/23.png 200w,\n/static/1649a2a54abebd38a025fb11542ad0cf/e17e5/23.png 400w,\n/static/1649a2a54abebd38a025fb11542ad0cf/5a190/23.png 800w,\n/static/1649a2a54abebd38a025fb11542ad0cf/c1b63/23.png 1200w,\n/static/1649a2a54abebd38a025fb11542ad0cf/0d98f/23.png 1276w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Cuando usamos CSS, tenemos que usar <a href=\"https://webpack.js.org/loaders/css-loader/\">css</a> y cargadores de <a href=\"https://webpack.js.org/loaders/style-loader/\">estilos</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n      loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.css$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>El trabajo del <a href=\"https://webpack.js.org/loaders/css-loader/\">cargador css</a> es cargar los archivos <i>CSS</i> y el trabajo del <a href=\"https://webpack.js.org/loaders/style-loader/\">cargador de estilos</a> es generar e inyectar un elemento <i>style</i> que contenga todos los estilos de la aplicación.</p>\n<p>Con esta configuración, las definiciones CSS se incluyen en el archivo <i>main.js</i> de la aplicación. Por esta razón, no es necesario importar por separado los estilos <i>CSS</i> en el archivo principal <i>index.html</i> de la aplicación.</p>\n<p>Si es necesario, el CSS de la aplicación también se puede generar en su propio archivo separado mediante el <a href=\"https://github.com/webpack-contrib/mini-css-extract-plugin\">mini-css-extract-plugin</a>.</p>\n<p>Cuando instalamos los cargadores:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install style<span class=\"token operator\">-</span>loader css<span class=\"token operator\">-</span>loader <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev</code></pre></div>\n<p>El empaquetamiento volverá a tener éxito y la aplicación obtendrá nuevos estilos.</p>\n<h3>Webpack-dev-servidor</h3>\n<p>La configuración actual hace posible el desarrollo de nuestra aplicación, pero el flujo de trabajo es terrible (hasta el punto en que se parece al flujo de trabajo de desarrollo con Java). Cada vez que hacemos un cambio en el código, tenemos que empaquetarlo y actualizar el navegador para probar el código.</p>\n<p>El <a href=\"https://webpack.js.org/guides/development/#using-webpack-dev-server\">webpack-dev-server</a> ofrece una solución a nuestros problemas. Instalemoslo con el comando: </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev webpack<span class=\"token operator\">-</span>dev<span class=\"token operator\">-</span>server</code></pre></div>\n<p>Definamos un script npm para iniciar el dev-server:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=development\"</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack serve --mode=development\"</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Agreguemos también una nueva propiedad <i>devServer</i> al objeto de configuración en el archivo <i>webpack.config.js</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    contentBase<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    compress<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>El comando <em>npm start</em> ahora iniciará el dev-server en el puerto 3000, lo que significa que nuestra aplicación estará disponible visitando <a href=\"http://localhost:3000\">http://localhost:3000</a> en el navegador. Cuando hacemos cambios en el código, el navegador actualizará automáticamente la página.</p>\n<p>El proceso de actualización del código es rápido. Cuando usamos el dev-server, el código no se incluye de la forma habitual en el archivo <i>main.js</i>. El resultado de la agrupación solo existe en la memoria.</p>\n<p>Extendamos el código cambiando la definición del componente <i>App</i> como se muestra a continuación:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>useState<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n      hello webpack <span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span> clicks\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setCounter</span><span class=\"token punctuation\">(</span>counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        press\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Vale la pena notar que los mensajes de error no se muestran de la misma manera que con nuestras aplicaciones que fueron creadas usando create-react-app. Por este motivo tenemos que prestar más atención a la consola:</p>\n<picture><img src=\"/static/dc4b54af693902e06de86b20bc894678/5a190/24.png\" srcset=\"/static/dc4b54af693902e06de86b20bc894678/772e8/24.png 200w,\n/static/dc4b54af693902e06de86b20bc894678/e17e5/24.png 400w,\n/static/dc4b54af693902e06de86b20bc894678/5a190/24.png 800w,\n/static/dc4b54af693902e06de86b20bc894678/c1b63/24.png 1200w,\n/static/dc4b54af693902e06de86b20bc894678/29007/24.png 1600w,\n/static/dc4b54af693902e06de86b20bc894678/d698c/24.png 1846w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>La aplicación funciona bien y el flujo de trabajo de desarrollo es bastante fluido.</p>\n<h3>Source maps</h3>\n<p>Extraigamos el controlador de clics en su propia función y almacenemos el valor anterior del contador en su propio estado de <i>valores</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>values<span class=\"token punctuation\">,</span> setValues<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setCounter</span><span class=\"token punctuation\">(</span>counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">setValues</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n      hello webpack <span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span> clicks\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        press\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La aplicación ya no funciona y la consola mostrará el siguiente error:</p>\n<picture><img src=\"/static/d955153075effad2f55449f9bc711b7d/5a190/25.png\" srcset=\"/static/d955153075effad2f55449f9bc711b7d/772e8/25.png 200w,\n/static/d955153075effad2f55449f9bc711b7d/e17e5/25.png 400w,\n/static/d955153075effad2f55449f9bc711b7d/5a190/25.png 800w,\n/static/d955153075effad2f55449f9bc711b7d/c1b63/25.png 1200w,\n/static/d955153075effad2f55449f9bc711b7d/29007/25.png 1600w,\n/static/d955153075effad2f55449f9bc711b7d/019a6/25.png 1818w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Sabemos que el error está en el método onClick, pero si la aplicación fuera más grande, el mensaje de error sería bastante difícil de localizar:</p>\n<pre>\nApp.js:27 Uncaught TypeError: Cannot read property 'concat' of undefined\n    at handleClick (App.js:27)\n</pre>\n<p>La ubicación del error indicada en el mensaje no coincide con la ubicación real del error en nuestro código fuente. Si hacemos clic en el mensaje de error, notamos que el código fuente mostrado no se parece al código de nuestra aplicación:</p>\n<picture><img src=\"/static/4f39053cc754c5c6fee8aacc57932e5b/5a190/26.png\" srcset=\"/static/4f39053cc754c5c6fee8aacc57932e5b/772e8/26.png 200w,\n/static/4f39053cc754c5c6fee8aacc57932e5b/e17e5/26.png 400w,\n/static/4f39053cc754c5c6fee8aacc57932e5b/5a190/26.png 800w,\n/static/4f39053cc754c5c6fee8aacc57932e5b/c1b63/26.png 1200w,\n/static/4f39053cc754c5c6fee8aacc57932e5b/29007/26.png 1600w,\n/static/4f39053cc754c5c6fee8aacc57932e5b/e0577/26.png 1796w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Por supuesto, queremos ver nuestro código fuente real en el mensaje de error.</p>\n<p>Afortunadamente, corregir el mensaje de error a este respecto es bastante fácil. Le pediremos a webpack que genere un llamado <a href=\"https://webpack.js.org/configuration/devtool/\">source map</a> para el paquete, que permite <i>mapear los errores</i> que ocurren durante la ejecución del paquete a la parte correspondiente en el código fuente original.</p>\n<p>El mapa fuente se puede generar agregando una nueva propiedad <i>devtool</i> al objeto de configuración con el valor 'source-map':</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  devtool<span class=\"token operator\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span></span>  <span class=\"token comment\">// ..</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Webpack debe reiniciarse cuando hagamos cambios en su configuración. También es posible hacer que el paquete web observe los cambios realizados en sí mismo, pero esta vez no lo haremos.</p>\n<p>El mensaje de error ahora es mucho mejor</p>\n<picture><img src=\"/static/33ebbea5e0039ad48406c2e96251bbe1/5a190/27.png\" srcset=\"/static/33ebbea5e0039ad48406c2e96251bbe1/772e8/27.png 200w,\n/static/33ebbea5e0039ad48406c2e96251bbe1/e17e5/27.png 400w,\n/static/33ebbea5e0039ad48406c2e96251bbe1/5a190/27.png 800w,\n/static/33ebbea5e0039ad48406c2e96251bbe1/c1b63/27.png 1200w,\n/static/33ebbea5e0039ad48406c2e96251bbe1/29007/27.png 1600w,\n/static/33ebbea5e0039ad48406c2e96251bbe1/24def/27.png 1812w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>ya que se refiere al código que escribimos</p>\n<picture><img src=\"/static/3882c0f14f62cd02164f40b286cf77ae/5a190/27eb.png\" srcset=\"/static/3882c0f14f62cd02164f40b286cf77ae/772e8/27eb.png 200w,\n/static/3882c0f14f62cd02164f40b286cf77ae/e17e5/27eb.png 400w,\n/static/3882c0f14f62cd02164f40b286cf77ae/5a190/27eb.png 800w,\n/static/3882c0f14f62cd02164f40b286cf77ae/c1b63/27eb.png 1200w,\n/static/3882c0f14f62cd02164f40b286cf77ae/29007/27eb.png 1600w,\n/static/3882c0f14f62cd02164f40b286cf77ae/8454b/27eb.png 1798w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>La generación del source map también permite utilizar el debugger de Chrome:</p>\n<picture><img src=\"/static/bb151364932b1f79c65be3317e9e2d7d/5a190/28.png\" srcset=\"/static/bb151364932b1f79c65be3317e9e2d7d/772e8/28.png 200w,\n/static/bb151364932b1f79c65be3317e9e2d7d/e17e5/28.png 400w,\n/static/bb151364932b1f79c65be3317e9e2d7d/5a190/28.png 800w,\n/static/bb151364932b1f79c65be3317e9e2d7d/c1b63/28.png 1200w,\n/static/bb151364932b1f79c65be3317e9e2d7d/29007/28.png 1600w,\n/static/bb151364932b1f79c65be3317e9e2d7d/c95f0/28.png 1842w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Arreglemos el error inicializando el estado de los <i>valores</i> como un array vacío:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>values<span class=\"token punctuation\">,</span> setValues<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Minificando el código</h3>\n<p>Cuando implementamos la aplicación en producción, usamos el paquete de código <i>main.js</i> que genera webpack. El tamaño de <i>main.js</i> archivo es 974473 bytes, aunque nuestra aplicación solo contiene unas pocas líneas de nuestro propio código. El gran tamaño del archivo se debe al hecho de que el paquete también contiene el código fuente de toda la biblioteca React. El tamaño del código incluido es importante, ya que el navegador tiene que cargar el código cuando se utiliza la aplicación por primera vez. Con conexiones a Internet de alta velocidad, 974473 bytes no es un problema, pero si tuviéramos que seguir agregando más dependencias externas, las velocidades de carga podrían convertirse en un problema particularmente para los usuarios móviles.</p>\n<p>Si inspeccionamos el contenido del archivo del paquete, notamos que podría optimizarse en gran medida en términos de tamaño de archivo eliminando todos los comentarios. No tiene sentido optimizar manualmente estos archivos, ya que existen muchas herramientas para el trabajo.</p>\n<p>El proceso de optimización para archivos JavaScript se llama <i>minificación</i>. Una de las principales herramientas destinadas a este fin es <a href=\"http://lisperator.net/uglifyjs/\">UglifyJS</a>.</p>\n<p>A partir de la versión 4 de webpack, el complemento de minificación no requiere configuración adicional para su uso. Basta con modificar el script npm en el archivo <i>package.json</i> para especificar que webpack ejecutará el empaquetado del código en modo de <i>producción</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-part7\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"practising webpack\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=production\"</span><span class=\"token punctuation\">,</span></span>    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack serve --mode=development\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cuando agrupamos la aplicación nuevamente, el tamaño del archivo <i>main.js</i> resultante disminuye sustancialmente:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ ls <span class=\"token operator\">-</span>l build<span class=\"token operator\">/</span>main<span class=\"token punctuation\">.</span>js\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span>  <span class=\"token number\">1</span> mluukkai  <span class=\"token number\">984178727</span>  <span class=\"token number\">132299</span> Feb <span class=\"token number\">16</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">33</span> build<span class=\"token operator\">/</span>main<span class=\"token punctuation\">.</span>js</code></pre></div>\n<p>La salida del proceso de minificación se asemeja al código C de la vieja escuela; Se han eliminado todos los comentarios e incluso los espacios en blanco innecesarios y los caracteres de nueva línea, y los nombres de las variables se han reemplazado por un solo carácter.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span> e<span class=\"token operator\">=</span><span class=\"token function\">u</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>d<span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>t<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">=</span>c<span class=\"token punctuation\">,</span>c<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>f<span class=\"token operator\">&lt;</span>t<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span>s<span class=\"token operator\">&amp;&amp;</span>s<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>f<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>t<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span>s<span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>d<span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>o<span class=\"token operator\">===</span>clearTimeout<span class=\"token punctuation\">)</span><span class=\"token keyword\">return</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>o<span class=\"token operator\">===</span>l<span class=\"token operator\">||</span><span class=\"token operator\">!</span>o<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span>clearTimeout<span class=\"token punctuation\">)</span><span class=\"token keyword\">return</span> o<span class=\"token operator\">=</span>clearTimeout<span class=\"token punctuation\">,</span><span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span><span class=\"token function\">o</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token function\">o</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token function\">o</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>a<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">nextTick</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Configuración de desarrollo y producción</h3>\n<p>A continuación, agreguemos un backend a nuestra aplicación y reutilizando el backend de la aplicación de notas ahora familiar.</p>\n<p>Guardemos el siguiente contenido en el archivo <i>db.json</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"notes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"important\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"HTML is easy\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5a3b8481bb01f9cb00ccb4a9\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"important\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mongo can save js objects\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5a3b920a61e8c8d3f484bdd0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nuestro objetivo es configurar la aplicación con webpack de tal manera que, cuando se use localmente, la aplicación use el servidor json disponible en el puerto 3001 como su backend.</p>\n<p>El archivo empaquetado se configurará para usar el backend disponible en la URL <a href=\"https://blooming-atoll-75500.herokuapp.com/api/notes\">https://blooming-atoll-75500.herokuapp.com/api/notes</a>.</p>\n<p>Instalaremos <i>axios</i>, iniciaremos el json-server y luego realizaremos los cambios necesarios en la aplicación. Con el fin de cambiar las cosas, obtendremos las notas del backend con nuestro <a href=\"/en/part7/custom_hooks\">hook personalizado</a> llamado <em>useNotes</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useNotes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>notes<span class=\"token punctuation\">,</span> setNotes<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setNotes</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>url<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> notes</span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>values<span class=\"token punctuation\">,</span> setValues<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'https://blooming-atoll-75500.herokuapp.com/api/notes'</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> notes <span class=\"token operator\">=</span> <span class=\"token function\">useNotes</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setCounter</span><span class=\"token punctuation\">(</span>counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setValues</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n      hello webpack <span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span> clicks\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span> <span class=\"token operator\">></span>press<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span> notes on server <span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>La dirección del servidor backend está actualmente hardcodeada en el código de la aplicación. ¿Cómo podemos cambiar la dirección de forma controlada para que apunte al servidor de backend de producción cuando el código está empaquetado para producción?</p>\n<p>Cambiemos el objeto de configuración en el archivo <i>webpack.config.js</i> para que sea una función en lugar de un objeto:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">env<span class=\"token punctuation\">,</span> argv</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devtool<span class=\"token operator\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span>\n    module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>La definición sigue siendo casi exactamente la misma, excepto por el hecho de que la función ahora devuelve el objeto de configuración. La función recibe los dos parámetros, <i>env</i> y <i>argv</i>, el segundo de los cuales se puede utilizar para acceder al <i>modo</i> definido en el script npm.</p>\n<p>También podemos usar <a href=\"https://webpack.js.org/plugins/define-plugin/\">DefinePlugin</a> de webpack para definir <i>constantes predeterminadas globales</i> que se pueden usar en el código incluido. Definamos una nueva constante global <i>BACKEND_URL</i>, que obtiene un valor diferente según el entorno para el que se empaqueta el código:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">env<span class=\"token punctuation\">,</span> argv</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'argv'</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">)</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> backend_url <span class=\"token operator\">=</span> argv<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">?</span> <span class=\"token string\">'https://blooming-atoll-75500.herokuapp.com/api/notes'</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:3001/api/notes'</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      contentBase<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      compress<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devtool<span class=\"token operator\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span>\n    module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token constant\">BACKEND_URL</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>backend_url<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">]</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>La constante global se usa de la siguiente manera en el código:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>values<span class=\"token punctuation\">,</span> setValues<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> notes <span class=\"token operator\">=</span> <span class=\"token function\">useNotes</span><span class=\"token punctuation\">(</span><span class=\"token constant\">BACKEND_URL</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n      hello webpack <span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span> clicks\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span> <span class=\"token operator\">></span>press<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>notes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span> notes on server <span class=\"token punctuation\">{</span><span class=\"token constant\">BACKEND_URL</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si la configuración para el desarrollo y la producción difiere mucho, puede ser una buena idea <a href=\"https://webpack.js.org/guides/production/\">separar la configuración</a> de los dos en sus propios archivos.</p>\n<p>Podemos inspeccionar la versión de producción empaquetada de la aplicación localmente ejecutando el siguiente comando en el directorio de <i>compilación</i>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npx <span class=\"token keyword\">static</span><span class=\"token operator\">-</span>server</code></pre></div>\n<p>De forma predeterminada, la aplicación incluida estará disponible en <a href=\"http://localhost:9080\">http://localhost:9080</a>.</p>\n<h3>Polyfill</h3>\n<p>Nuestra aplicación está terminada y funciona con todas las versiones relativamente recientes de los navegadores modernos, con la excepción de Internet Explorer. La razón de esto es que debido a <em>axios</em>, nuestro código usa <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promises</a>, y ninguna versión existente de IE las admite:</p>\n<picture><img src=\"/static/0b5aa155e9eeeb0dea280553e56d89d4/5a190/29.png\" srcset=\"/static/0b5aa155e9eeeb0dea280553e56d89d4/772e8/29.png 200w,\n/static/0b5aa155e9eeeb0dea280553e56d89d4/e17e5/29.png 400w,\n/static/0b5aa155e9eeeb0dea280553e56d89d4/5a190/29.png 800w,\n/static/0b5aa155e9eeeb0dea280553e56d89d4/c1b63/29.png 1200w,\n/static/0b5aa155e9eeeb0dea280553e56d89d4/7be33/29.png 1558w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Hay muchas otras cosas en el estándar que IE no admite. Algo tan inofensivo como el método <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\">find</a> de arrays de JavaScript supera las capacidades de IE:</p>\n<picture><img src=\"/static/7903d766241ce1c0e22e026d9ab9e012/5a190/30.png\" srcset=\"/static/7903d766241ce1c0e22e026d9ab9e012/772e8/30.png 200w,\n/static/7903d766241ce1c0e22e026d9ab9e012/e17e5/30.png 400w,\n/static/7903d766241ce1c0e22e026d9ab9e012/5a190/30.png 800w,\n/static/7903d766241ce1c0e22e026d9ab9e012/c1b63/30.png 1200w,\n/static/7903d766241ce1c0e22e026d9ab9e012/0f882/30.png 1584w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>En estas situaciones, no es suficiente transpilar el código, ya que la transpilación simplemente transforma el código de una versión más nueva de JavaScript a una más antigua con un soporte de navegador más amplio. IE entiende las Promesas sintácticamente, pero simplemente no ha implementado su funcionalidad. La propiedad <em>find</em> de arrays en IE es simplemente <i>undefined</i>.</p>\n<p>Si queremos que la aplicación sea compatible con IE, debemos agregar un <a href=\"https://remysharp.com/2010/10/08/what-is-a-polyfill\">polyfill</a>, que es un código que agrega la funcionalidad que falta a los navegadores más antiguos.</p>\n<p>Polyfills se puede agregar con la ayuda de<a href=\"https://babeljs.io/docs/usage/polyfill/\">webpack and Babel</a> o instalando una de las muchas librerías de polyfill existentes.</p>\n<p>El polyfill proporcionado por la librería <a href=\"https://www.npmjs.com/package/promise-polyfill\">promise-polyfill</a> es fácil de usar, simplemente tenemos que agregar lo siguiente al código de nuestra aplicación existente:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> PromisePolyfill <span class=\"token keyword\">from</span> <span class=\"token string\">'promise-polyfill'</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>Promise<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span>Promise <span class=\"token operator\">=</span> PromisePolyfill\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si el objeto global <em>Promise</em>  no existe, lo que significa que el navegador no es compatible con Promises, el polyfilled Promise se almacena en la variable global. Si polyfilled Promise se implementa lo suficientemente bien, el resto del código debería funcionar sin problemas.</p>\n<p>Puede encontrar una lista exhaustiva de polyfills existentes <a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills\">aquí</a>.</p>\n<p>La compatibilidad del navegador de diferentes APIs se puede verificar visitando <a href=\"https://caniuse.com\">https://caniuse.com</a> o <a href=\"https://developer.mozilla.org/en-US/\">el sitio web de Mozilla</a>.</p>\n<h3>Eject</h3>\n<p>La herramienta create-react-app usa webpack detrás de escena. Si la configuración predeterminada no es suficiente, es posible <a href=\"https://create-react-app.dev/docs/available-scripts/#npm-run-eject\">expulsar</a> el proyecto que eliminará toda la magia negra, y los archivos de configuración predeterminados se almacenarán en el directorio de <i>configuración</i> y en un archivo <i>package.json</i> modificado.</p>\n<p>Si expulsa una aplicación creada con create-react-app, no habrá retorno y toda la configuración deberá mantenerse manualmente. La configuración predeterminada no es trivial y, en lugar de expulsarla de una aplicación create-react-app, una mejor alternativa puede ser escribir su propia configuración de webpack desde el principio.</p>\n<p>Se recomienda revisar y leer los archivos de configuración de una aplicación expulsada y es extremadamente educativo.</p>\n</div>\n<div class=\"tasks\">\n<h3>Ejercicios</h3>\n<p>Un ejercicio relacionado con los temas presentados aquí, se puede encontrar al final de esta sección de material del curso en el conjunto de ejercicios <a href=\"/es/part7/exercises_extending_the_bloglist\">para extender la aplicación de lista de blogs</a>.</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/2184b1c35920cfc7a09e10660dea04eb/part-7.svg"},"part":7,"letter":"d","lang":"es"}}},"pageContext":{"part":7,"letter":"d","lang":"es"}},"staticQueryHashes":["3128451518"]}