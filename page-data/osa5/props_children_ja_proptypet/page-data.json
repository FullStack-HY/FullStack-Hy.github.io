{"componentChunkName":"component---src-templates-content-template-js","path":"/osa5/props_children_ja_proptypet","result":{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<h3>Kirjautumislomakkeen näyttäminen vain tarvittaessa</h3>\n<p>Muutetaan sovellusta siten, että kirjautumislomaketta ei oletusarvoisesti näytetä:</p>\n<picture><img src=\"/static/da248f79ad2c71a9e834c174065dc694/5a190/10e.png\" alt=\"Oletusarvoisesti sovellus näytää ainoastaan muistiinpanojen listan sekä napin &#x22;log in&#x22;\" srcset=\"/static/da248f79ad2c71a9e834c174065dc694/772e8/10e.png 200w,\n/static/da248f79ad2c71a9e834c174065dc694/e17e5/10e.png 400w,\n/static/da248f79ad2c71a9e834c174065dc694/5a190/10e.png 800w,\n/static/da248f79ad2c71a9e834c174065dc694/c1b63/10e.png 1200w,\n/static/da248f79ad2c71a9e834c174065dc694/3ceac/10e.png 1456w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Lomake aukeaa, jos käyttäjä painaa nappia <i>login</i>:</p>\n<picture><img src=\"/static/bb9909156016418fc4cc9a1b60424f13/5a190/11e.png\" alt=\"Kun nappia &#x22;log in&#x22; painetaan, avautuu kirjaantumislomake (jolla kentät username ja password sekä nappi kirjautumisen tekemiseen). Näkyviin tulee myös nappi &#x22;cancel&#x22;, jota painamalla kirjaantumislomake suljetaan tekemättä kirjautumista\" srcset=\"/static/bb9909156016418fc4cc9a1b60424f13/772e8/11e.png 200w,\n/static/bb9909156016418fc4cc9a1b60424f13/e17e5/11e.png 400w,\n/static/bb9909156016418fc4cc9a1b60424f13/5a190/11e.png 800w,\n/static/bb9909156016418fc4cc9a1b60424f13/c1b63/11e.png 1200w,\n/static/bb9909156016418fc4cc9a1b60424f13/8b936/11e.png 1368w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Napilla <i>cancel</i> käyttäjä saa tarvittaessa suljettua lomakkeen.</p>\n<p>Aloitetaan eristämällä kirjautumislomake omaksi komponentikseen:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">LoginForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n   handleSubmit<span class=\"token punctuation\">,</span>\n   handleUsernameChange<span class=\"token punctuation\">,</span>\n   handlePasswordChange<span class=\"token punctuation\">,</span>\n   username<span class=\"token punctuation\">,</span>\n   password\n  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          username\n          <span class=\"token operator\">&lt;</span>input\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleUsernameChange<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          password\n          <span class=\"token operator\">&lt;</span>input\n            type<span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span>\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>password<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handlePasswordChange<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span><span class=\"token operator\">></span>login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> LoginForm</code></pre></div>\n<p>Tila ja tilaa käsittelevät funktiot on kaikki määritelty komponentin ulkopuolella ja ne välitetään komponentille propseina.</p>\n<p>Huomaa, että propsit otetaan vastaan <i>destrukturoimalla</i>, eli sen sijaan että määriteltäisiin</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">LoginForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          username\n          <span class=\"token operator\">&lt;</span>input\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span>\n            name<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token comment\">// ...</span>\n        <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span><span class=\"token operator\">></span>login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>jolloin muuttujan <em>props</em> kenttiin on viitattava muuttujan kautta esim. <em>props.handleSubmit</em>, otetaan kentät suoraan vastaan omiin muuttujiinsa.</p>\n<p>Nopea tapa toiminnallisuuden toteuttamiseen on muuttaa komponentin <i>App</i> käyttämä funktio <em>loginForm</em> seuraavaan muotoon:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>loginVisible<span class=\"token punctuation\">,</span> setLoginVisible<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loginForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> hideWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> loginVisible <span class=\"token operator\">?</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> showWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> loginVisible <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>hideWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setLoginVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>log <span class=\"token keyword\">in</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>showWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>LoginForm\n            username<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>\n            password<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>password<span class=\"token punctuation\">}</span>\n            handleUsernameChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> target <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            handlePasswordChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> target <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            handleSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleLogin<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setLoginVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>cancel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Komponentin <i>App</i> tilaan on nyt lisätty totuusarvo <i>loginVisible</i>, joka määrittelee sen, näytetäänkö kirjautumislomake.</p>\n<p>Näkyvyyttä säätelevää tilaa vaihdellaan kahden napin avulla, joihin molempiin on kirjoitettu tapahtumankäsittelijän koodi suoraan:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setLoginVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>log <span class=\"token keyword\">in</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setLoginVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>cancel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></code></pre></div>\n<p>Komponenttien näkyvyys on määritelty asettamalla komponentille <a href=\"/osa2/tyylien_lisaaminen_react_sovellukseen#inline-tyylit\">inline</a>-tyyleinä CSS-määrittely, jossa <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/display\">display</a>-propertyn arvoksi asetetaan <i>none</i> jos komponentin ei haluta näkyvän:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> hideWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> loginVisible <span class=\"token operator\">?</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> showWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> loginVisible <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>hideWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token comment\">// nappi</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>showWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token comment\">// lomake</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>Käytössä on kysymysmerkkioperaattori eli jos <em>loginVisible</em> on <i>true</i>, tulee napin CSS-määrittelyksi</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Jos <em>loginVisible</em> on <i>false</i>, ei <i>display</i> saa mitään napin näkyvyyteen liittyvää arvoa.</p>\n<h3>Komponentin lapset eli props.children</h3>\n<p>Kirjautumislomakkeen näkyvyyttä ympäröivän koodin voi ajatella olevan oma looginen kokonaisuutensa, ja se onkin hyvä eristää pois komponentista <i>App</i> omaksi komponentikseen.</p>\n<p>Tavoitteena on luoda komponentti <i>Togglable</i>, jota käytetään seuraavalla tavalla:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">'login'</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>LoginForm\n    username<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>\n    password<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>password<span class=\"token punctuation\">}</span>\n    handleUsernameChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> target <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    handlePasswordChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> target <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    handleSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleLogin<span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span></code></pre></div>\n<p>Komponentin käyttö poikkeaa aiemmin näkemistämme siinä, että käytössä on nyt avaava ja sulkeva tagi, joiden sisällä määritellään toinen komponentti eli <i>LoginForm</i>. Reactin terminologiassa <i>LoginForm</i> on nyt komponentin <i>Togglable</i> lapsi.</p>\n<p><i>Togglablen</i> avaavan ja sulkevan tagin sisälle voi sijoittaa lapsiksi mitä tahansa React-elementtejä, esim.:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"paljasta\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>tämä on aluksi piilossa<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>toinen salainen rivi<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span></code></pre></div>\n<p>Komponentin koodi on tällainen:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Togglable</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>visible<span class=\"token punctuation\">,</span> setVisible<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> hideWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> visible <span class=\"token operator\">?</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> showWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> visible <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleVisibility</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visible<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>hideWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleVisibility<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>buttonLabel<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>showWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span></span>        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleVisibility<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>cancel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Togglable</code></pre></div>\n<p>Mielenkiintoista ja meille uutta on <a href=\"https://reactjs.org/docs/glossary.html#propschildren\">props.children</a>, jonka avulla koodi viittaa komponentin lapsiin eli avaavan ja sulkevan tagin sisällä määriteltyihin React-elementteihin.</p>\n<p>Tällä kertaa lapset ainoastaan renderöidään komponentin oman renderöivän koodin seassa:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>showWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleVisibility<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>cancel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>Toisin kuin \"normaalit\" propsit, <i>children</i> on Reactin automaattisesti määrittelemä, aina olemassa oleva propsi. Jos komponentti määritellään automaattisesti suljettavalla eli <em>/></em> loppuvalla tagilla, esim.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Note\n  key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span>\n  note<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>note<span class=\"token punctuation\">}</span>\n  toggleImportance<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">toggleImportanceOf</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>on <i>props.children</i> tyhjä taulukko.</p>\n<p>Komponentti <i>Togglable</i> on uusiokäytettävä, ja voimme käyttää sitä tekemään myös uuden muistiinpanon luomisesta huolehtivan formin vastaavalla tavalla tarpeen mukaan näytettäväksi.</p>\n<p>Eristetään ensin muistiinpanojen luominen omaksi komponentiksi</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">NoteForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> onSubmit<span class=\"token punctuation\">,</span> handleChange<span class=\"token punctuation\">,</span> value <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Create a <span class=\"token keyword\">new</span> <span class=\"token class-name\">note</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input\n          value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">}</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span><span class=\"token operator\">></span>save<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> NoteForm</code></pre></div>\n<p>ja määritellään lomakkeen näyttävä koodi komponentin <i>Togglable</i> sisällä</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"new note\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>NoteForm\n    onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>addNote<span class=\"token punctuation\">}</span>\n    value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>newNote<span class=\"token punctuation\">}</span>\n    handleChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleNoteChange<span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span></code></pre></div>\n<p>Sovelluksen tämänhetkinen koodi on kokonaisuudessaan <a href=\"https://github.com/fullstack-hy2020/part2-notes/tree/part5-4\">GitHubissa</a>, branchissa <i>part5-4</i>.</p>\n<h3>Lomakkeiden tila</h3>\n<p>Koko sovelluksen tila on nyt sijoitettu komponenttiin <em>App</em>. </p>\n<p>Reactin dokumentaatio antaa seuraavan <a href=\"https://reactjs.org/docs/lifting-state-up.html\">ohjeen</a> tilan sijoittamisesta:</p>\n<blockquote>\n<p><i>Often, several components need to reflect the same changing data. We recommend lifting the shared state up to their closest common ancestor.</i></p>\n</blockquote>\n<p>Jos mietitään lomakkeiden tilaa eli esimerkiksi uuden muistiinpanon sisältöä sillä hetkellä kun muistiinpanoa ei vielä ole luotu, ei komponentti <em>App</em> oikeastaan tarvitse niitä mihinkään, ja voisimme aivan hyvin siirtää lomakkeisiin liittyvän tilan niitä vastaaviin komponentteihin.</p>\n<p>Muistiinpanon luomisesta huolehtiva komponentti muuttuu seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">NoteForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> createNote <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>newNote<span class=\"token punctuation\">,</span> setNewNote<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addNote</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">createNote</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      content<span class=\"token operator\">:</span> newNote<span class=\"token punctuation\">,</span>\n      important<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">setNewNote</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Create a <span class=\"token keyword\">new</span> <span class=\"token class-name\">note</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>addNote<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input\n          value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>newNote<span class=\"token punctuation\">}</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token function\">setNewNote</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span><span class=\"token operator\">></span>save<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> NoteForm</code></pre></div>\n<p><strong>HUOM</strong> muutimme samalla sovelluksen toimintaa siten, että uudet muistiinpanot ovat oletusarvoisesti tärkeitä, eli <i>important</i> saa arvon <i>true</i>.</p>\n<p>Tilan muuttuja <i>newNote</i> ja sen muutoksesta huolehtiva tapahtumankäsittelijä on siirretty komponentista <em>App</em> lomakkeesta huolehtivaan komponenttiin.</p>\n<p>Propseja on enää yksi eli funktio <em>createNote</em>, jota lomake kutsuu kun uusi muistiinpano luodaan.</p>\n<p>Komponentti <em>App</em> yksinkertaistuu, koska tilasta <i>newNote</i> ja sen käsittelijäfunktiosta on päästy eroon. Uuden muistiinpanon luomisesta huolehtiva funktio <em>addNote</em> saa suoraan parametriksi uuden muistiinpanon ja funktio on ainoa props, joka välitetään lomakkeelle:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addNote</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">noteObject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span>    noteService\n      <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>noteObject<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">returnedNote</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setNotes</span><span class=\"token punctuation\">(</span>notes<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>returnedNote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Notes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token comment\">// ...</span>\n\n      <span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"new note\"</span><span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token operator\">&lt;</span>NoteForm createNote<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>addNote<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span>\n\n      <span class=\"token comment\">// ...</span>\n      <span class=\"token operator\">&lt;</span>Footer <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vastaava muutos voitaisiin tehdä myös kirjautumislomakkeelle, mutta jätämme sen vapaaehtoiseksi harjoitustehtäväksi.</p>\n<p>Sovelluksen tämänhetkinen koodi on kokonaisuudessaan <a href=\"https://github.com/fullstack-hy2020/part2-notes/tree/part5-5\">GitHubissa</a>, branchissa <i>part5-5</i>.</p>\n<h3>ref eli viite komponenttiin</h3>\n<p>Ratkaisu on melko hyvä, mutta haluamme kuitenkin parantaa sitä. Kun uusi muistiinpano luodaan, olisi loogista jos luomislomake menisi piiloon. Nyt lomake pysyy näkyvillä. Lomakkeen piilottamiseen sisältyy kuitenkin pieni ongelma, sillä näkyvyyttä kontrolloidaan <i>Togglable</i>-komponentin tilassa olevalla muuttujalla <i>visible</i>. Miten pääsemme tilaan käsiksi komponentin ulkopuolelta?</p>\n<p>On useita erilaisia tapoja toteuttaa pääsy komponentin funktioihin sen ulkopuolelta. Käytetään nyt Reactin <a href=\"https://reactjs.org/docs/refs-and-the-dom.html\">ref</a>-mekanismia, joka tarjoaa eräänlaisen viitteen komponenttiin.</p>\n<p>Tehdään komponenttiin <i>App</i> seuraavat muutokset:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect<span class=\"token punctuation\">,</span> useRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> noteFormRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">'new note'</span> ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>noteFormRef<span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span>      <span class=\"token operator\">&lt;</span>NoteForm createNote<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>addNote<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://reactjs.org/docs/hooks-reference.html#useref\">useRef</a> hookilla luodaan ref <i>noteFormRef</i>, joka kiinnitetään muistiinpanojen luomislomakkeen sisältävälle <i>Togglable</i>-komponentille. Nyt siis muuttuja <i>noteFormRef</i> toimii viitteenä komponenttiin.</p>\n<p>Komponenttia <i>Togglable</i> laajennetaan seuraavasti</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useImperativeHandle<span class=\"token punctuation\">,</span> forwardRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> Togglable <span class=\"token operator\">=</span> <span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>visible<span class=\"token punctuation\">,</span> setVisible<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> hideWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> visible <span class=\"token operator\">?</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> showWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> visible <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleVisibility</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visible<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useImperativeHandle</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      toggleVisibility</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>hideWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleVisibility<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>buttonLabel<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>showWhenVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleVisibility<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>cancel<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Togglable</code></pre></div>\n<p>Komponentin luova funktio on kääritty funktiokutsun <a href=\"https://reactjs.org/docs/react-api.html#reactforwardref\">forwardRef</a> sisälle, jolloin komponentti pääsee käsiksi sille määriteltyyn refiin.</p>\n<p>Komponentti tarjoaa <a href=\"https://reactjs.org/docs/hooks-reference.html#useimperativehandle\">useImperativeHandle </a>-hookin avulla sisäisesti määritellyn funktionsa <i>toggleVisibility</i> ulkopuolelta kutsuttavaksi.</p>\n<p>Voimme nyt piilottaa lomakkeen kutsumalla <i>noteFormRef.current.toggleVisibility()</i> samalla kun uuden muistiinpanon luominen tapahtuu:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addNote</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">noteObject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    noteFormRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">toggleVisibility</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>    noteService\n      <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>noteObject<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">returnedNote</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>     \n        <span class=\"token function\">setNotes</span><span class=\"token punctuation\">(</span>notes<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>returnedNote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Käyttämämme <a href=\"https://reactjs.org/docs/hooks-reference.html#useimperativehandle\">useImperativeHandle</a> on siis React hook, jonka avulla komponentille voidaan määrittää funktioita, joita on mahdollista kutsua sen ulkopuolelta.</p>\n<p>Käyttämämme kikka komponentin tilan muuttamiseksi toimii, mutta se vaikuttaa hieman ikävältä. Saman olisi saanut aavistuksen siistimmin toteutettua \"vanhan Reactin\" class-komponenteilla, joihin tutustumme osassa 7. Tämä on toistaiseksi ainoa tapaus, jossa Reactin hook-syntaksiin nojaava ratkaisu on aavistuksen likaisemman oloinen kuin class-komponenttien tarjoama ratkaisu.</p>\n<p>Refeille on myös <a href=\"https://reactjs.org/docs/refs-and-the-dom.html\">muita käyttötarkoituksia</a> kuin React-komponentteihin käsiksi pääseminen.</p>\n<p>Sovelluksen tämänhetkinen koodi on kokonaisuudessaan <a href=\"https://github.com/fullstack-hy2020/part2-notes/tree/part5-6\">GitHubissa</a>, branchissa <i>part5-6</i>.</p>\n<h3>Huomio komponenteista</h3>\n<p>Kun Reactissa määritellään komponentti</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Togglable</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ja otetaan se käyttöön</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span> ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>togglable1<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    ensimmäinen\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span>\n\n  <span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"2\"</span> ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>togglable2<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    toinen\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span>\n\n  <span class=\"token operator\">&lt;</span>Togglable buttonLabel<span class=\"token operator\">=</span><span class=\"token string\">\"3\"</span> ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>togglable3<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    kolmas\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>syntyy <i>kolme erillistä komponenttiolioa</i>, joilla on kaikilla oma tilansa:</p>\n<picture><img src=\"/static/9f0757dafbe5075afc40961bc9589356/5a190/12.png\" alt=\"Kuva havainnollistaa, että selain renderöi kolme erillistä komponenttia, jotka voivat olla toisistaan riippumatta &#x22;togglattuina&#x22; näkyville\" srcset=\"/static/9f0757dafbe5075afc40961bc9589356/772e8/12.png 200w,\n/static/9f0757dafbe5075afc40961bc9589356/e17e5/12.png 400w,\n/static/9f0757dafbe5075afc40961bc9589356/5a190/12.png 800w,\n/static/9f0757dafbe5075afc40961bc9589356/c1b63/12.png 1200w,\n/static/9f0757dafbe5075afc40961bc9589356/64639/12.png 1568w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p><i>ref</i>-attribuutin avulla on talletettu viite jokaiseen komponentin muuttujaan <i>togglable1</i>, <i>togglable2</i> ja <i>togglable3</i>.</p>\n<h3>Full stack -sovelluskehittäjän päivitetty vala</h3>\n<p>Liikkuvien osien määrä nousee. Samalla kasvaa myös todennäköisyys sille, että päädymme tilanteeseen, missä etsimme vikaa täysin väärästä paikasta. Systemaattisuutta on siis lisättävä vielä pykälän verran. </p>\n<p>Full stack -ohjelmointi on <i>todella</i> hankalaa, ja sen takia lupaan hyödyntää kaikkia ohjelmointia helpottavia keinoja:</p>\n<ul>\n<li>pidän selaimen konsolin koko ajan auki</li>\n<li>tarkkailen säännöllisesti selaimen network-välilehdeltä, että frontendin ja backendin välinen kommunikaatio tapahtuu oletusteni mukaan</li>\n<li>tarkkailen säännöllisesti palvelimella olevan datan tilaa, ja varmistan että frontendin lähettämä data siirtyy sinne kuten oletin</li>\n<li>pidän silmällä tietokannan tilaa: varmistan että backend tallentaa datan sinne oikeaan muotoon</li>\n<li>etenen pienin askelin</li>\n<li><i>kun epäinen että bugi on frontendissa, varmistan että backend toimii varmasti</i></li>\n<li><i>kun epäinen että bugi on backendissa, varmistan että frontend toimii varmasti</i></li>\n<li>käytän koodissa ja testeissä runsaasti <em>console.log</em>-komentoja varmistamaan sen, että varmasti ymmärrän jokaisen kirjoittamani rivin, sekä etsiessäni koodista tai testeistä mahdollisia ongelman aiheuttajia</li>\n<li>jos koodini ei toimi, en kirjoita enää yhtään lisää koodia, vaan alan poistamaan toiminnan rikkoneita rivejä tai palaan suosiolla tilanteeseen, missä koodi vielä toimi</li>\n<li>jos testit eivät mene läpi, varmistan että testien testaama toiminnallisuus varmasti toimii sovelluksessa</li>\n<li>kun kysyn apua kurssin Discord- tai Telegram-kanavalla, tai muualla internetissä, muotoilen kysymyksen järkevästi, esim. <a href=\"http://localhost:8000/en/part0/general_info#how-to-ask-help-in-discord-telegam\">täällä</a> esiteltyyn tapaan</li>\n</ul>\n</div>\n<div class=\"tasks\">\n<h3>Tehtävät 5.5.-5.11.</h3>\n<h4>5.5 blogilistan frontend, step5</h4>\n<p>Tee blogin luomiseen käytettävästä lomakkeesta ainoastaan tarvittaessa näytettävä osan 5 luvun <a href=\"/osa5/props_children_ja_proptypet#kirjautumislomakkeen-nayttaminen-vain-tarvittaessa\">Kirjautumislomakkeen näyttäminen vain tarvittaessa</a> tapaan. Voit halutessasi hyödyntää osassa 5 määriteltyä komponenttia <i>Togglable</i>.</p>\n<p>Lomake ei ole oletusarvoisesti näkyvillä:</p>\n<picture><img src=\"/static/de4cfabdf46a837f1f0bfdba4fd27d67/5a190/13ae.png\" alt=\"Oletusarvoisesti näytetään ainoastaan nappi &#x22;create new blog&#x22;\" srcset=\"/static/de4cfabdf46a837f1f0bfdba4fd27d67/772e8/13ae.png 200w,\n/static/de4cfabdf46a837f1f0bfdba4fd27d67/e17e5/13ae.png 400w,\n/static/de4cfabdf46a837f1f0bfdba4fd27d67/5a190/13ae.png 800w,\n/static/de4cfabdf46a837f1f0bfdba4fd27d67/c1b63/13ae.png 1200w,\n/static/de4cfabdf46a837f1f0bfdba4fd27d67/eb2ef/13ae.png 1324w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Klikkaamalla nappia <i>create new blog</i> lomake aukeaa:</p>\n<picture><img src=\"/static/0cb27abc7b56ba5ecdd7e9d48d325c87/5a190/13be.png\" alt=\"kun nappia painetaan, avautuu uuden blogin luomisen mahdollistava komponentti joka sisältää napin cancel, jota painamalla lomakkeen voi piilottaa\" srcset=\"/static/0cb27abc7b56ba5ecdd7e9d48d325c87/772e8/13be.png 200w,\n/static/0cb27abc7b56ba5ecdd7e9d48d325c87/e17e5/13be.png 400w,\n/static/0cb27abc7b56ba5ecdd7e9d48d325c87/5a190/13be.png 800w,\n/static/0cb27abc7b56ba5ecdd7e9d48d325c87/c1b63/13be.png 1200w,\n/static/0cb27abc7b56ba5ecdd7e9d48d325c87/bc3ae/13be.png 1268w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Lomakkeen tulee sulkeutua kun uusi blogi luodaan.</p>\n<h4>5.6 blogilistan frontend, step6</h4>\n<p>Eriytä uuden blogin luomisesta huolehtiva lomake omaan komponenttiinsa (jos et jo ole niin tehnyt), ja siirrä kaikki uuden blogin luomiseen liittyvä tila komponentin vastuulle. </p>\n<p>Komponentin tulee siis toimia samaan tapaan kuin tämän osan <a href=\"https://fullstack-hy2020.github.io/osa5/props_children_ja_proptypet#lomakkeiden-tila\">materiaalin</a> komponentin <i>NoteForm</i>.</p>\n<h4>5.7 blogilistan frontend, step7</h4>\n<p>Lisää yksittäiselle blogille nappi, jonka avulla voi kontrolloida, näytetäänkö kaikki blogiin liittyvät tiedot.</p>\n<p>Klikkaamalla nappia sen täydelliset tiedot aukeavat:</p>\n<picture><img src=\"/static/b49e9ca45d0582829eed343baad44910/5a190/13ea.png\" alt=\"Oletusarvoisesti kustakin blogista näytetään nimi ja kirjoittaja sekä nappi view. Nappia painamalla näytetään myös blogin url, sen likejen määrä, nappi &#x22;likettämiseen&#x22; sekä blogin lisännyt käyttäjä ja nappi tarkempien tietojen piilottamiseen.\" srcset=\"/static/b49e9ca45d0582829eed343baad44910/772e8/13ea.png 200w,\n/static/b49e9ca45d0582829eed343baad44910/e17e5/13ea.png 400w,\n/static/b49e9ca45d0582829eed343baad44910/5a190/13ea.png 800w,\n/static/b49e9ca45d0582829eed343baad44910/c1b63/13ea.png 1200w,\n/static/b49e9ca45d0582829eed343baad44910/229ad/13ea.png 1356w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Uusi napin klikkaus pienentää näkymän.</p>\n<p>Napin <i>like</i> ei tässä vaiheessa tarvitse tehdä mitään.</p>\n<p>Kuvassa on myös käytetty hieman CSS:ää parantamaan sovelluksen ulkoasua.</p>\n<p>Tyylejä voidaan määritellä osan 2 tapaan helposti <a href=\"/osa2/tyylien_lisaaminen_react_sovellukseen#inline-tyylit\">inline</a>-tyyleinä seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Blog</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> blog <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> blogStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    paddingTop<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    paddingLeft<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    border<span class=\"token operator\">:</span> <span class=\"token string\">'solid'</span><span class=\"token punctuation\">,</span>\n    borderWidth<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    marginBottom<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>blogStyle<span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span>      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span> \n        <span class=\"token punctuation\">{</span>blog<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>blog<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token comment\">// ...</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Huom 1:</strong> Voit tehdä blogin nimestä klikattavan korostetun koodirivin tapaan.</p>\n<p><strong>Huom 2:</strong> Vaikka tämän tehtävän toiminnallisuus on melkein samanlainen kuin komponentin <i>Togglable</i> tarjoama toiminnallisuus, ei Togglable kuitenkaan sovi tarkoitukseen sellaisenaan. Helpoin ratkaisu lienee lisätä blogille tila, joka kontrolloi sitä missä muodossa blogi näytetään.</p>\n<h4>5.8*: blogilistan frontend, step8</h4>\n<p>Huomaamme, että jotain on pielessä. Kun sovellukseen lisätään uusi blogi, ei blogin lisääjän nimeä näytetä blogin tarkempien tietojen joukossa:</p>\n<picture><img src=\"/static/4c1a13b22d33df750f24a6e136e7abc1/5a190/59new.png\" srcset=\"/static/4c1a13b22d33df750f24a6e136e7abc1/772e8/59new.png 200w,\n/static/4c1a13b22d33df750f24a6e136e7abc1/e17e5/59new.png 400w,\n/static/4c1a13b22d33df750f24a6e136e7abc1/5a190/59new.png 800w,\n/static/4c1a13b22d33df750f24a6e136e7abc1/c1b63/59new.png 1200w,\n/static/4c1a13b22d33df750f24a6e136e7abc1/29007/59new.png 1600w,\n/static/4c1a13b22d33df750f24a6e136e7abc1/0d292/59new.png 1620w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Kun selain uudelleenladataan, lisääjän tieto tulee näkyviin. Tämä ei ole hyväksyttävää, selvitä missä vika on ja tee tarvittava korjaus.</p>\n<h4>5.9: blogilistan frontend, step9</h4>\n<p>Toteuta like-painikkeen toiminnallisuus. Like lisätään backendiin blogin yksilöivään urliin tapahtuvalla <em>PUT</em>-pyynnöllä.</p>\n<p>Koska backendin operaatio korvaa aina koko blogin, joudut lähettämään operaation mukana blogin kaikki kentät. Eli jos seuraavaa blogia liketetään,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  _id<span class=\"token operator\">:</span> <span class=\"token string\">\"5a43fde2cbd20b12a2c34e91\"</span><span class=\"token punctuation\">,</span>\n  user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    _id<span class=\"token operator\">:</span> <span class=\"token string\">\"5a43e6b6c37f3d065eaaa581\"</span><span class=\"token punctuation\">,</span>\n    username<span class=\"token operator\">:</span> <span class=\"token string\">\"mluukkai\"</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"Matti Luukkainen\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  likes<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  author<span class=\"token operator\">:</span> <span class=\"token string\">\"Joel Spolsky\"</span><span class=\"token punctuation\">,</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">\"The Joel Test: 12 Steps to Better Code\"</span><span class=\"token punctuation\">,</span>\n  url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>tulee palvelimelle tehdä PUT-pyyntö osoitteeseen <i>/api/blogs/5a43fde2cbd20b12a2c34e91</i> ja sisällyttää pyynnön mukaan seuraava data:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  user<span class=\"token operator\">:</span> <span class=\"token string\">\"5a43e6b6c37f3d065eaaa581\"</span><span class=\"token punctuation\">,</span>\n  likes<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  author<span class=\"token operator\">:</span> <span class=\"token string\">\"Joel Spolsky\"</span><span class=\"token punctuation\">,</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">\"The Joel Test: 12 Steps to Better Code\"</span><span class=\"token punctuation\">,</span>\n  url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Varoitus vielä kerran:</strong> Jos huomaat kirjoittavasi sekaisin async/awaitia ja <em>then</em>-kutsuja, on 99.9-prosenttisen varmaa, että teet jotain väärin. Käytä siis jompaa kumpaa tapaa, älä missään tapauksessa \"varalta\" molempia.</p>\n<h4>5.10: blogilistan frontend, step10</h4>\n<p>Järjestä sovellus näyttämään blogit <i>likejen</i> mukaisessa suuruusjärjestyksessä. Järjestäminen onnistuu taulukon metodilla <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\">sort</a>.</p>\n<h4>5.11: blogilistan frontend, step11</h4>\n<p>Lisää nappi blogin poistamiselle. Toteuta myös poiston tekevä logiikka.</p>\n<p>Ohjelmasi voi näyttää esim. seuraavalta:</p>\n<picture><img src=\"/static/87b7180f1f10ce670af1bc21f50233ec/5a190/14ea.png\" alt=\"Blogin tarkemman näkymän (avautuu kun painetaan view) mukana on nappi delete, jota painamalla blogin voi poistaa. Poisto varmistetaan window.confirm:n avulla toteutetulla dialogilla\" srcset=\"/static/87b7180f1f10ce670af1bc21f50233ec/772e8/14ea.png 200w,\n/static/87b7180f1f10ce670af1bc21f50233ec/e17e5/14ea.png 400w,\n/static/87b7180f1f10ce670af1bc21f50233ec/5a190/14ea.png 800w,\n/static/87b7180f1f10ce670af1bc21f50233ec/c1b63/14ea.png 1200w,\n/static/87b7180f1f10ce670af1bc21f50233ec/d0c2f/14ea.png 1362w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Kuvassa näkyvä poiston varmistus on helppo toteuttaa funktiolla <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm\">window.confirm</a>.</p>\n<p>Näytä poistonappi ainoastaan jos kyseessä on kirjautuneen käyttäjän lisäämä blogi.</p>\n</div>\n<div class=\"content\">\n<h3>PropTypes</h3>\n<p>Komponentti <i>Togglable</i> olettaa, että sille määritellään propsina <i>buttonLabel</i> napin teksti. Jos määrittely unohtuu,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Togglable<span class=\"token operator\">></span> buttonLabel unohtui<span class=\"token operator\">...</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Togglable<span class=\"token operator\">></span></code></pre></div>\n<p>sovellus kyllä toimii, mutta selaimeen renderöityy hämäävästi nappi, jolla ei ole mitään tekstiä.</p>\n<p>Haluaisimmekin varmistaa, että jos <i>Togglable</i>-komponenttia käytetään, on propsille \"pakko\" antaa arvo.</p>\n<p>Komponentin olettamat ja edellyttämät propsit ja niiden tyypit voidaan määritellä kirjaston <a href=\"https://github.com/facebook/prop-types\">prop-types</a> avulla. Asennetaan kirjasto:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> prop-types</code></pre></div>\n<p><i>buttonLabel</i> voidaan määritellä <i>pakolliseksi</i> string-tyyppiseksi propsiksi seuraavasti:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span>\n\n<span class=\"token keyword\">const</span> Togglable <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ..</span>\n<span class=\"token punctuation\">}</span>\n\nTogglable<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  buttonLabel<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Jos propsia ei määritellä, seurauksena on konsoliin tulostuva virheilmoitus:</p>\n<picture><img src=\"/static/7a239ed6d3ad6721a65ae3ac24eb29b5/5a190/15.png\" srcset=\"/static/7a239ed6d3ad6721a65ae3ac24eb29b5/772e8/15.png 200w,\n/static/7a239ed6d3ad6721a65ae3ac24eb29b5/e17e5/15.png 400w,\n/static/7a239ed6d3ad6721a65ae3ac24eb29b5/5a190/15.png 800w,\n/static/7a239ed6d3ad6721a65ae3ac24eb29b5/c1b63/15.png 1200w,\n/static/7a239ed6d3ad6721a65ae3ac24eb29b5/29007/15.png 1600w,\n/static/7a239ed6d3ad6721a65ae3ac24eb29b5/ab40b/15.png 1736w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Koodi kuitenkin toimii edelleen, eli mikään ei pakota määrittelemään propseja PropTypes-määrittelyistä huolimatta. On kuitenkin erittäin epäammattimaista jättää konsoliin <i>mitään</i> punaisia tulosteita.</p>\n<p>Määritellään Proptypet myös <i>LoginForm</i>-komponentille:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">LoginForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n   handleSubmit<span class=\"token punctuation\">,</span>\n   handleUsernameChange<span class=\"token punctuation\">,</span>\n   handlePasswordChange<span class=\"token punctuation\">,</span>\n   username<span class=\"token punctuation\">,</span>\n   password\n  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n\nLoginForm<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  handleSubmit<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  handleUsernameChange<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  handlePasswordChange<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  username<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  password<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Jos propsin tyyppi on väärä, eli jos esimerkiksi yritetään määritellä propsiksi <i>handleSubmit</i> merkkijono, seurauksena on varoitus:</p>\n<picture><img src=\"/static/ec732518823c5e2921d46285e5549bf3/5a190/16.png\" srcset=\"/static/ec732518823c5e2921d46285e5549bf3/772e8/16.png 200w,\n/static/ec732518823c5e2921d46285e5549bf3/e17e5/16.png 400w,\n/static/ec732518823c5e2921d46285e5549bf3/5a190/16.png 800w,\n/static/ec732518823c5e2921d46285e5549bf3/c1b63/16.png 1200w,\n/static/ec732518823c5e2921d46285e5549bf3/29007/16.png 1600w,\n/static/ec732518823c5e2921d46285e5549bf3/ab40b/16.png 1736w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h3>ESLint</h3>\n<p>Konfiguroimme osassa 3 koodin tyylistä huolehtivan <a href=\"/osa3/validointi_ja_es_lint\">ESLintin</a> backendiin. Otetaan nyt ESLint käyttöön myös frontendissa.</p>\n<p>Create-react-app on asentanut projektille ESLintin valmiiksi, joten ei tarvita muuta kuin sopiva konfiguraatio tiedostoon <i>.eslintrc.js</i>.</p>\n<p><strong>HUOM:</strong> Älä suorita komentoa <em>eslint --init</em>. Se asentaa ESLintistä uuden version, joka on epäsopiva create-react-app:in konfiguraatioiden kanssa!</p>\n<p>Aloitamme seuraavaksi testaamisen, ja jotta pääsemme eroon testeissä olevista turhista huomautuksista asennetaan plugin <a href=\"https://www.npmjs.com/package/eslint-plugin-jest\">eslint-jest-plugin</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev eslint<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span>jest</code></pre></div>\n<p>Luodaan tiedosto <i>.eslintrc.js</i> ja kopioidaan sinne seuraava sisältö:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"browser\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"es6\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"jest/globals\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> \n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n      <span class=\"token string\">\"eslint:recommended\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"plugin:react/recommended\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"parserOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"ecmaFeatures\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token string\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"ecmaVersion\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2018</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sourceType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"jest\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"indent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token number\">2</span>  \n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"linebreak-style\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"unix\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"quotes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"single\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"never\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"eqeqeq\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"no-trailing-spaces\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"object-curly-spacing\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"always\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"arrow-spacing\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"before\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"after\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"no-console\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"react/prop-types\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"react/react-in-jsx-scope\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"settings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"react\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"detect\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Tehdään projektin juureen tiedosto <a href=\"https://eslint.org/docs/user-guide/configuring#ignoring-files-and-directories\">.eslintignore</a> ja sille seuraava sisältö:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node_modules\nbuild\n.eslintrc.js</code></pre></div>\n<p>Näin ainoastaan sovelluksessa oleva itse kirjoitettu koodi huomioidaan linttauksessa. </p>\n<p>Tehdään lintausta varten npm-skripti:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react-scripts start\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react-scripts build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react-scripts test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"eject\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react-scripts eject\"</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string\">\"eslint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint .\"</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Komponentti <em>Togglable</em> aiheuttaa ikävän näköisen varoituksen <i>Component definition is missing display name</i>: </p>\n<picture><img src=\"/static/f61843245205294dd4fbf50d8b864dd7/5a190/25x.png\" alt=\"VS codessa näkyy ESLint-varoitus &#x22;Component definition is missing display name&#x22;\" srcset=\"/static/f61843245205294dd4fbf50d8b864dd7/772e8/25x.png 200w,\n/static/f61843245205294dd4fbf50d8b864dd7/e17e5/25x.png 400w,\n/static/f61843245205294dd4fbf50d8b864dd7/5a190/25x.png 800w,\n/static/f61843245205294dd4fbf50d8b864dd7/c1b63/25x.png 1200w,\n/static/f61843245205294dd4fbf50d8b864dd7/29007/25x.png 1600w,\n/static/f61843245205294dd4fbf50d8b864dd7/913b9/25x.png 1822w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Komponentin \"nimettömyys\" käy ilmi myös React Development Toolsilla:</p>\n<picture><img src=\"/static/1fc750ed2c0c78b8736615837a6be1a0/5a190/26ea.png\" alt=\"React Development Tool paljastaa, että komponentin nimi on &#x22;Anonymous&#x22;\" srcset=\"/static/1fc750ed2c0c78b8736615837a6be1a0/772e8/26ea.png 200w,\n/static/1fc750ed2c0c78b8736615837a6be1a0/e17e5/26ea.png 400w,\n/static/1fc750ed2c0c78b8736615837a6be1a0/5a190/26ea.png 800w,\n/static/1fc750ed2c0c78b8736615837a6be1a0/c1b63/26ea.png 1200w,\n/static/1fc750ed2c0c78b8736615837a6be1a0/29007/26ea.png 1600w,\n/static/1fc750ed2c0c78b8736615837a6be1a0/d3b46/26ea.png 1690w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Korjaus on onneksi hyvin helppo tehdä:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useImperativeHandle <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span>\n\n<span class=\"token keyword\">const</span> Togglable <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"gatsby-highlight-code-line\">Togglable<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token string\">'Togglable'</span></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Togglable</code></pre></div>\n<p>Sovelluksen tämänhetkinen koodi on kokonaisuudessaan <a href=\"https://github.com/fullstack-hy2020/part2-notes/tree/part5-7\">GitHubissa</a>, branchissa <i>part5-7</i>.</p>\n<p>Kannattaa huomata, että create-react-appilla on myös <a href=\"https://www.npmjs.com/package/eslint-config-react-app\">oletusarvoinen ESLint-konfiguraatio</a>, jonka korvasimme nyt kokonaan omalla konfiguraatiolla. <a href=\"https://create-react-app.dev/docs/setting-up-your-editor/#extending-or-replacing-the-default-eslint-config\">Dokumentaatio</a> toteaa, että oletusarvoisen konfiguraation korvaaminen on ok, mutta suosittelee mielummin <i>laajentamaan</i> oletusarvoista konfiguraatiota: <i>We highly recommend extending the base config, as removing it could introduce hard-to-find issues</i>.</p>\n</div>\n<div class=\"tasks\">\n<h3>Tehtävä 5.12.</h3>\n<h4>5.12: blogilistan frontend, step11</h4>\n<p>Määrittele joillekin sovelluksesi komponenteille PropTypet, ja ota projektiin käyttöön ESLint. Määrittele haluamasi kaltainen konfiguraatio. Korjaa kaikki lint-virheet.</p>\n<p>Create-react-app on asentanut projektille ESLintin valmiiksi, joten ei tarvita muuta kun sopiva konfiguraatio tiedostoon <i>.eslintrc.js</i>.</p>\n<p><strong>HUOM:</strong> Älä suorita komentoa <em>eslint --init</em>. Se asentaa ESLintistä uuden version, joka on epäsopiva create-react-app:in konfiguraatioiden kanssa!</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/b92f84fe9702a35b12f10af4588ba4c2/part-5.svg"},"part":5,"letter":"b","lang":"fi"}}},"pageContext":{"part":5,"letter":"b","lang":"fi"}},"staticQueryHashes":["3128451518"]}