{"version":3,"sources":["webpack:///./src/components/Footer/Footer.js","webpack:///./src/components/Arrow/Arrow.js","webpack:///./src/pages/404.js","webpack:///./src/utils/getPartTranslationPath.js"],"names":["images","src","yliopisto","alt","href","houston","Footer","useTranslation","t","i18n","navigation","getNavigation","language","id","className","flex","spaceBetween","map","image","key","contain","item","path","to","style","marginLeft","text","Arrow","render","wrapperClassName","link","content","stack","bold","thickBorder","upperCase","props","arrowContent","arrow","i","arrowStyle","backgroundColor","color","colors","toUpperCase","display","flexDirection","defaultProps","NotFoundPage","state","siteLanguage","componentDidMount","window","location","pathname","indexOf","this","setState","title","lang","getTranslationPath","Component","getPartTranslationPath","part"],"mappings":"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","file":"component---src-pages-404-js-89af4c7add8c7978ed1c.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './Footer.scss';\n\nimport Element from '../Element/Element';\nimport { Image } from '../Image/Image';\nimport houston from '../../images/company_logos/houston.svg';\nimport { getNavigation } from '../Navigation/Navigation';\nimport yliopisto from '../../images/company_logos/uoh_centre.svg';\n\nconst images = [\n  {\n    src: yliopisto,\n    alt: 'Helsingin yliopiston logo',\n    href: 'https://www.helsinki.fi/',\n  },\n  {\n    src: houston,\n    alt: 'Houston inc. logo',\n    href: 'https://www.houston-inc.com/',\n  },\n];\n\nconst Footer = () => {\n  const { t, i18n } = useTranslation();\n  const navigation = getNavigation(i18n.language, t);\n\n  return (\n    <Element\n      id=\"footer\"\n      className=\"container spacing--after-small spacing--mobile\"\n      flex\n    >\n      <Element\n        className=\"col-5 push-right-3 col-10--mobile order-2--mobile order-2--tablet footer__links\"\n        flex\n        spaceBetween\n      >\n        {images.map(image => (\n          <a\n            key={image.alt}\n            href={image.href}\n            className=\"col-5 col-4--mobile spacing--mobile\"\n          >\n            <Image contain src={image.src} alt={image.alt} className=\"col-6\" />\n          </a>\n        ))}\n      </Element>\n\n      <Element\n        flex\n        className=\"col-5 col-5--mobile order-1--mobile order-1--tablet footer__navigation\"\n      >\n        <div className=\"footer__navigation-link-container\">\n          {navigation.map(item => (\n            <Link\n              key={item.path}\n              to={item.path}\n              className=\"footer__navigation-link nav-item-hover\"\n              style={{ marginLeft: '4.5rem' }}\n            >\n              {item.text}\n            </Link>\n          ))}\n        </div>\n      </Element>\n    </Element>\n  );\n};\n\nexport default Footer;\n","import './Arrow.scss';\n\nimport Element from '../Element/Element';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport colors from '../../colors';\n\nconst Arrow = ({\n  className,\n  wrapperClassName,\n  link,\n  content,\n  stack,\n  bold,\n  thickBorder,\n  upperCase,\n  ...props\n}) => {\n  const arrowContent = (\n    <div className={`arrow__container arrows--horizontal ${className}`}>\n      {content.map((arrow, i) => {\n        const arrowStyle = {\n          backgroundColor: arrow.backgroundColor\n            ? arrow.backgroundColor\n            : 'transparent',\n          color:\n            arrow.backgroundColor === colors['black']\n              ? 'white'\n              : colors['black'],\n        };\n\n        return (\n          <div key={`arrow${i}`} className=\"arrow__wrapper\" {...props}>\n            <div\n              className={`arrow__rectangle ${bold ? 'bold' : ''} ${\n                thickBorder ? 'arrow__rectangle--thick-border' : ''\n              }`}\n              style={arrowStyle}\n            >\n              {arrow.link ? (\n                <Link to={arrow.link}>\n                  {upperCase ? arrow.text.toUpperCase() : arrow.text}\n                </Link>\n              ) : upperCase ? (\n                arrow.text.toUpperCase()\n              ) : (\n                arrow.text\n              )}\n            </div>\n            <div\n              className={`arrow__point ${\n                thickBorder ? 'arrow__point--thick-border' : ''\n              }`}\n              style={arrowStyle}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n\n  let render;\n\n  if (!stack && !link) {\n    render = <div className=\"col-10 spacing--after\">{arrowContent}</div>;\n  } else if (!stack && link) {\n    render = (\n      <div className=\"spacing--after-small auto-bottom-margin\">\n        <Link to={link} style={{ display: 'inline-block' }}>\n          {arrowContent}\n        </Link>\n      </div>\n    );\n  } else if (stack) {\n    render = (\n      <div className={`col-10 spacing--after ${wrapperClassName}`}>\n        <div\n          className=\"arrow__container arrow__container--with-link\"\n          style={{ display: 'flex', flexDirection: 'column' }}\n        >\n          {content.map(arrow => {\n            const arrowStyle = {\n              backgroundColor: arrow.backgroundColor\n                ? arrow.backgroundColor\n                : 'transparent',\n              color:\n                arrow.backgroundColor === colors['black']\n                  ? 'white'\n                  : colors['black'],\n            };\n\n            return (\n              <Link\n                key={arrow.text}\n                to={arrow.path}\n                className={`arrow__wrapper--stacked ${className}`}\n                {...props}\n              >\n                <Element flex className=\"arrow__rectangle\" style={arrowStyle}>\n                  <p className=\"arrow--stacked-title\"><span>{arrow.text}</span></p>\n                </Element>\n                <div className=\"arrow__point\" style={arrowStyle} />\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  return render;\n};\n\nArrow.propTypes = {\n  className: PropTypes.string,\n  wrapperClassName: PropTypes.string,\n  link: PropTypes.string,\n  content: PropTypes.array.isRequired,\n  stack: PropTypes.bool,\n  upperCase: PropTypes.bool,\n  bold: PropTypes.bool,\n  thickBorder: PropTypes.bool,\n};\n\nArrow.defaultProps = {\n  className: '',\n  wrapperClassName: '',\n};\n\nexport default Arrow;\n","import React, { Component } from 'react';\n\nimport Arrow from '../components/Arrow/Arrow';\nimport Element from '../components/Element/Element';\nimport Footer from '../components/Footer/Footer';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport colors from '../colors';\nimport getTranslationPath from '../utils/getPartTranslationPath';\n\nclass NotFoundPage extends Component {\n  state = {\n    siteLanguage: 'fi',\n  };\n\n  componentDidMount() {\n    const siteLanguage =\n      window.location.pathname.indexOf('/en') > -1\n        ? 'en'\n        : window.location.pathname.indexOf('/zh') > -1\n        ? 'zh'\n        : 'fi';\n\n    this.setState({ siteLanguage });\n  }\n\n  render() {\n    const title =\n      this.state.siteLanguage === 'en' ? 'Page not found' : 'Sivua ei löytynyt';\n\n    return (\n      <Layout>\n        <SEO\n          title={`${title} | Full stack open`}\n          lang={this.state.siteLanguage}\n        />\n\n        <Element className=\"container spacing--large spacing--after\">\n          <h1>404 - {title}</h1>\n\n          <p className=\"col-10 spacing--small spacing--after\">\n            Uncaught ReferenceError: unknown is not defined\n          </p>\n\n          <Arrow\n            className=\"col-10 arrow__container--with-link\"\n            bold\n            thickBorder\n            link={getTranslationPath(this.state.siteLanguage, '/')}\n            content={[\n              { backgroundColor: colors['main'], text: 'Go back home' },\n            ]}\n          />\n        </Element>\n\n        <Footer lang={this.state.siteLanguage} />\n      </Layout>\n    );\n  }\n}\n\nexport default NotFoundPage;\n","const getPartTranslationPath = (language, part, path = '') => {\n  return language === 'fi' ? `/osa${part}${path}` : `/${language}/part${part}${path}`;\n};\n\nexport default getPartTranslationPath;\n"],"sourceRoot":""}